"""
PROBLEM #2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
even-valued terms.
"""


# This function checks if a number is even or not.
def even_number(number):
    if number % 2 == 0:
        return True
    else:
        return False


# This function finds a fibonacci sequence whose values do not exceed a certain number.
def fibonacci_sequence(limit):
    numbers = [1, 2]
    next_number = 0
    while next_number < limit:
        next_number = numbers[-1] + numbers[-2]
        numbers.append(next_number)
    return numbers


limit_number = 4000000
sumResult = 0
fibonacci_numbers = fibonacci_sequence(limit_number)
for num in fibonacci_numbers:
    if even_number(num):
        sumResult += num
print(f'The fibonacci sequence until {limit_number} is: \n {fibonacci_numbers}')
print(f'The sum of all the fibonacci sequence is: \n {sumResult}')
